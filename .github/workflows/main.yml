name: Main Real Estate Bot Workflow

on:
  push:
    branches:
      - main
      - dev

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./django_api/requirements.txt

    - name: Test API with flake8
      run: python -m flake8 ./django_api/

  # build_api_and_push_to_docker_hub:
  #   name: Push API Docker image to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       # Получение исходного кода из репозитория
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       # Установка сборщика контейнеров Docker
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker 
  #       # Авторизация на Docker Hub
  #       uses: docker/login-action@v2
  #       # При помощи with передаём в action параметры username и password
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to DockerHub
  #       # Одновременный билд и пуш образа в Docker Hub
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./django_api/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME_LOWCASE }}/real_estate_bot_api:latest

  # build_scraper_and_push_to_docker_hub:
  #   name: Push scraper Docker image to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker 
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to DockerHub
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./real_estate_scraper/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME_LOWCASE }}/real_estate_bot_scraper:latest

  # build_telegram_bot_and_push_to_docker_hub:
  #   name: Push telegram bot Docker image to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker 
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to DockerHub
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./bot/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME_LOWCASE }}/real_estate_bot_telegram_bot:latest

  # build_nginx_and_push_to_docker_hub:
  #   name: Push gateway Docker image to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker 
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to DockerHub
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./nginx/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME_LOWCASE }}/real_estate_bot_nginx:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build_api_and_push_to_docker_hub
  #     - build_scraper_and_push_to_docker_hub
  #     - build_telegram_bot_and_push_to_docker_hub
  #     - build_nginx_and_push_to_docker_hub
  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v3
  #   - name: Copy docker-compose.yml via ssh
  #     uses: appleboy/scp-action@master
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USER }}
  #       key: ${{ secrets.SSH_KEY }}
  #       passphrase: ${{ secrets.SSH_PASSPHRASE }}
  #       source: "docker-compose.production.yml"
  #       target: "simbu"
  #   - name: Executing remote ssh commands to deploy
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USER }}
  #       key: ${{ secrets.SSH_KEY }}
  #       passphrase: ${{ secrets.SSH_PASSPHRASE }}

  #       script: |
  #         yes y | sudo docker system prune
  #         cd real_estate_bot/
  #         sudo docker compose -f docker-compose.production.yml pull
  #         sudo docker compose -f docker-compose.production.yml down
  #         sudo docker compose -f docker-compose.production.yml up -d
          

  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - name: Send message
  #     uses: appleboy/telegram-action@master
  #     with:
  #       to: ${{ secrets.TELEGRAM_TO }}
  #       token: ${{ secrets.TELEGRAM_TOKEN }}
  #       message: Деплой проекта Real Estate Telegram Bot успешно выполнен!
